set(FRAMEWORK ${PROJECT_NAME})

include_directories(".")
file(GLOB CORE_SRC_LIST "*.cpp")
file(GLOB CORE_HEADER_LIST "*.h")

if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "POSIX")
    file(GLOB_RECURSE OSPORTS_SRC_LIST "OSPorts/POSIX/*.cpp")
    file(GLOB_RECURSE OSPORTS_HEADER_LIST "OSPorts/POSIX/*.h")
elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows" OR CMAKE_SYSTEM_NAME STREQUAL "Win32")
    file(GLOB_RECURSE OSPORTS_SRC_LIST "OSPorts/Win32/*.cpp")
    file(GLOB_RECURSE OSPORTS_HEADER_LIST "OSPorts/Win32/*.h")
elseif(CMAKE_SYSTEM_NAME STREQUAL "WinCE")
    file(GLOB_RECURSE OSPORTS_SRC_LIST "OSPorts/WinCE/*.cpp")
    file(GLOB_RECURSE OSPORTS_HEADER_LIST "OSPorts/WinCE/*.h")
elseif(CMAKE_SYSTEM_NAME STREQUAL "eCOS")
    file(GLOB_RECURSE OSPORTS_SRC_LIST "OSPorts/eCOS/*.cpp")
    file(GLOB_RECURSE OSPORTS_HEADER_LIST "OSPorts/eCOS/*.h")
endif()

set(FRAMEWORK_SRC_LIST ${CORE_SRC_LIST} ${OSPORTS_SRC_LIST})
set(FRAMEWORK_HEADER_LIST ${CORE_HEADER_LIST} ${OSPORTS_HEADER_LIST})
set(FRAMEWORK_OBJECTS ${FRAMEWORK}Objects)

add_library(${FRAMEWORK_OBJECTS} OBJECT ${FRAMEWORK_SRC_LIST} ${FRAMEWORK_HEADER_LIST})
add_library(${FRAMEWORK} STATIC $<TARGET_OBJECTS:${FRAMEWORK_OBJECTS}>)
set_target_properties(${FRAMEWORK} PROPERTIES PUBLIC_HEADER "${CORE_HEADER_LIST}")

if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "POSIX")
    target_link_libraries(${FRAMEWORK} pthread)
    target_compile_definitions(${FRAMEWORK_OBJECTS} PUBLIC -DNSF_OS_POSIX)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows" OR CMAKE_SYSTEM_NAME STREQUAL "Win32")
    target_compile_definitions(${FRAMEWORK_OBJECTS} PUBLIC -DNSF_OS_WIN32)
elseif(CMAKE_SYSTEM_NAME STREQUAL "WinCE")
    target_compile_definitions(${FRAMEWORK_OBJECTS} PUBLIC -DNSF_OS_WINCE)
elseif(CMAKE_SYSTEM_NAME STREQUAL "eCOS")
    target_compile_definitions(${FRAMEWORK_OBJECTS} PUBLIC -DNSF_OS_ECOS)
endif()

install(TARGETS ${FRAMEWORK}
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib
        PUBLIC_HEADER DESTINATION include)